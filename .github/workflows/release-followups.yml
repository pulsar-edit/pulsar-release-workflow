# This GitHub Action Workflow will handle **ONLY FOLLOWUP** steps to a full
# Pulsar Regular Release. This should only ever be merged **AFTER** Pulsar's
# newest version PR has been merged to `master`.
name: Followup Steps to Regular Release

on:
  workflow_dispatch:

env:
  # Variables needed
  newPulsarVersion: "null" # Set by 'findCurrentPulsarVersion' script
  GH_ISSUE_TOKEN: ${{ secrets.AUTH_TOKEN_GITHUB_ISSUES }} # Set our secret auth token for `gh` CLI to use
  GH_TOKEN: ${{ secrets.AUTH_TOKEN_GITHUB }} # Set our secret auth token for `gh` CLI to use

jobs:
  release-followups:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    #### Setup
    - name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: latest

    - name: Checkout this Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: '0'

    - name: Install this repositories dependencies
      run: npm install

    - name: Setup Git User
      run: |
        git --version
        git config --global user.name "Pulsar-Edit Bot"
        git config --global user.email "<no-reply@users-github.com>"

    #### Find current Pulsar Version
    - name: Clone the pulsar-edit/pulsar repository
      uses: actions/checkout@v4
      with:
        repository: pulsar-edit/pulsar
        path: pulsar
        token: ${{ env.GH_TOKEN }}

    - name: Find current Version
      run: |
        node ./findCurrentPulsarVersion \
          --packageLocation "pulsar/package.json" \
          --envVarOutput "newPulsarVersion"

    #### Trigger followup actions in other repositories
    - name: Trigger Pulsar Chocolatey Release
      run: |
        node ./updateRepoViaGithubIssue \
          --version ${{ env.newPulsarVersion }} \
          --githubAuthToken ${{ env.GH_ISSUE_TOKEN }} \
          --repo "pulsar-chocolatey" \
          --label "release"

    - name: Trigger Pulsar Documentation Update
      run: |
        node ./updateRepoViaGithubIssue \
          --version ${{ env.newPulsarVersion }} \
          --githubAuthToken ${{ env.GH_ISSUE_TOKEN }} \
          --repo "documentation" \
          --label "update-docs"

    - name: Trigger Pulsar Main Website Update
      run: |
        node ./updateRepoViaGithubIssue \
          --version ${{ env.newPulsarVersion }} \
          --githubAuthToken ${{ env.GH_ISSUE_TOKEN }} \
          --repo "pulsar-edit.github.io" \
          --label "update-version"

    ## TODO Add the new blog post
